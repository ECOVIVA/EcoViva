# Generated by Django 5.1.7 on 2025-05-19 23:36

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('community', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Campanha',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('deadline', models.DateTimeField(verbose_name='Deadline')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('goal', models.TextField(blank=True, null=True, verbose_name='Goal')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='community.community', verbose_name='Community')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)ss_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Campaign',
                'verbose_name_plural': 'Campaigns',
            },
        ),
        migrations.CreateModel(
            name='CampanhaParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name='Joined At')),
                ('campanha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='community.campanha', verbose_name='Campaign')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Campaign Participant',
                'verbose_name_plural': 'Campaign Participants',
            },
        ),
        migrations.CreateModel(
            name='Gincana',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('deadline', models.DateTimeField(verbose_name='Deadline')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('metal_points', models.PositiveIntegerField(verbose_name='Metal Points')),
                ('paper_points', models.PositiveIntegerField(verbose_name='Paper Points')),
                ('plastic_points', models.PositiveIntegerField(verbose_name='Plastic Points')),
                ('glass_points', models.PositiveIntegerField(verbose_name='Glass Points')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='community.community', verbose_name='Community')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)ss_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Gincana',
                'verbose_name_plural': 'Gincanas',
            },
        ),
        migrations.CreateModel(
            name='GincanaCompetitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Group Name')),
                ('points', models.PositiveIntegerField()),
                ('gincana', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitor_groups', to='community.gincana', verbose_name='Gincana')),
                ('members', models.ManyToManyField(blank=True, related_name='gincana_groups', to=settings.AUTH_USER_MODEL, verbose_name='Members')),
            ],
            options={
                'verbose_name': 'Gincana Competitor',
                'verbose_name_plural': 'Gincana Competitors',
            },
        ),
        migrations.CreateModel(
            name='GincanaRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metal_qty', models.PositiveIntegerField(default=0)),
                ('paper_qty', models.PositiveIntegerField(default=0)),
                ('plastic_qty', models.PositiveIntegerField(default=0)),
                ('glass_qty', models.PositiveIntegerField(default=0)),
                ('collected_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('competitor_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collection_records', to='community.gincanacompetitor')),
                ('gincana', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collection_records', to='community.gincana')),
                ('registered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collection_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Gincana Record',
                'verbose_name_plural': 'Gincana Records',
                'ordering': ['-collected_at'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Quiz Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('campanha', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='community.campanha', verbose_name='Campaign')),
                ('gincana', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='community.gincana', verbose_name='Gincana')),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizzes',
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255, verbose_name='Question Text')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='community.quiz', verbose_name='Quiz')),
            ],
            options={
                'verbose_name': 'Quiz Question',
                'verbose_name_plural': 'Quiz Questions',
            },
        ),
        migrations.CreateModel(
            name='QuizOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255, verbose_name='Option Text')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Is Correct')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='community.quizquestion', verbose_name='Question')),
            ],
            options={
                'verbose_name': 'Quiz Option',
                'verbose_name_plural': 'Quiz Options',
            },
        ),
        migrations.CreateModel(
            name='QuizAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answered_at', models.DateTimeField(auto_now_add=True, verbose_name='Answered At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('selected_option', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='community.quizoption', verbose_name='Selected Option')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.quizquestion', verbose_name='Question')),
            ],
            options={
                'verbose_name': 'Quiz Answer',
                'verbose_name_plural': 'Quiz Answers',
                'unique_together': {('user', 'question')},
            },
        ),
        migrations.DeleteModel(
            name='Event',
        ),
    ]
